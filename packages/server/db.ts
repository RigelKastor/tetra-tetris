import UserModel from './forum/models/userModel'
import TopicModel from './forum/models/topicModel'
import CommentModel from './forum/models/commentModel'
import { Sequelize, SequelizeOptions } from 'sequelize-typescript'
import TopicReactionModel from './forum/models/reactions'
import CommentReactionModel from './forum/models/reactions'

export const createClientAndConnect = async (): Promise<Sequelize | null> => {
  try {
    const {
      POSTGRES_USER,
      POSTGRES_PASSWORD,
      POSTGRES_DB,
      POSTGRES_PORT,
      POSTGRES_HOST,
    } = process.env

    const sequelizeOptions: SequelizeOptions = {
      username: POSTGRES_USER,
      host: POSTGRES_HOST, // –í–æ—Ç —Ç—É—Ç –ø–æ–Ω—è—Ç—å –∫–∞–∫ –º–µ–Ω—è—Ç—å –Ω–∞ 'localhost' –µ—Å–ª–∏ –∑–∞–ø—É—Å–∫–∞–µ–º —á–µ—Ä–µ–∑ yarn dev,
      database: POSTGRES_DB,
      password: POSTGRES_PASSWORD,
      port: Number(POSTGRES_PORT),
      dialect: 'postgres',
    }

    const sequelize = new Sequelize(sequelizeOptions)

    const res = await sequelize.query('SELECT NOW()')
    console.log('  ‚ûú üé∏ Connected to the database at:', res)

    sequelize.addModels([
      UserModel,
      TopicModel,
      CommentModel,
      TopicReactionModel,
      CommentReactionModel,
    ])
    await sequelize.sync()

    // ############### –∫–æ–¥ –Ω–∏–∂–µ –±—É–¥–µ—Ç —É–¥–∞–ª—ë–Ω

    //—É–¥–∞–ª—è—é —Ä–∞–Ω–µ–µ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —é–∑–µ—Ä–æ–≤ –∏ –æ–±–Ω—É–ª—è—é id –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç–æ–ø–∏–∫–æ–≤
    await UserModel.destroy({ where: {} })
    await UserModel.sequelize!.query(
      'ALTER SEQUENCE users_id_seq RESTART WITH 1'
    )

    // –¥–æ–±–∞–≤–ª—è—é —Ç–µ—Å—Ç–æ–≤—ã—Ö —é–∑–µ—Ä–æ–≤
    sequelize.query(
      "INSERT INTO users (login, name, avatar, theme) VALUES ('kochanov@yandex.ru', 'Andrey', 'avaLink', 'light'), ('semen@yandex.ru', 'Semen', 'avaLink', 'dark')"
    )

    // –¥–æ–±–∞–≤–ª—è—é —Ç–µ—Å—Ç–æ–≤—ã–µ —Ç–æ–ø–∏–∫–∏

    sequelize.query(
      "INSERT INTO topics (theme, body, uid) VALUES ('–ö–∞–∫ –Ω–∞–±—Ä–∞—Ç—å 1000 –æ—á–∫–æ–≤', '–ï—Å—Ç—å –ª–∏ –∫–∞–∫–æ–π-—Ç–æ –ª–∞–π—Ñ—Ö–∞–∫?', 1), ('–ò–≥—Ä–æ–≤–æ–π –≥–∞–π–¥', 'LOREM IPSUM BLA BLA BLA', 2);"
    )
    // ###########################################
    return sequelize
  } catch (e) {
    console.error(e)
  }

  return null
}
// 'postgres://postgres:postgres@postgres:127.0.0.1:5432/postgres',
